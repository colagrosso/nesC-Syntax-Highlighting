<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "syntax.dtd">
<syntax>

    <head>
        <name>C</name> <!-- The definitions title -->
        <charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@]]></charsintokens> <!-- Valid Characters for Variables -->
        <!-- <charsdelimitingtokens></charsdelimitingtokens> -->
    </head>

    <states>
    
        <default id="Base" color="#000" background-color="#fff" font-weight="normal" font-style="normal">
            <keywords id="Keywords" color="#881350" useforautocomplete="yes">
				<string>break</string>
				<string>case</string>
				<string>continue</string>
				<string>default</string>
				<string>do</string>
				<string>else</string>
				<string>enum</string>
				<string>extern</string>
				<string>for</string>
				<string>goto</string>
				<string>if</string>
				<string>NULL</string>
				<string>void</string>
				<string>return</string>
				<string>sizeof</string>
				<string>struct</string>
				<string>switch</string>
				<string>typedef</string>
				<string>union</string>
				<string>while</string>
				<string>self</string>
				<string>super</string>
				<string>int</string>
				<string>long</string>
				<string>float</string>
				<string>double</string>
				<string>char</string>
				<string>unichar</string>
				<string>unsigned</string>
				<string>signed</string>
				<string>const</string>
				<string>extern</string>
				<string>static</string>
                <string>auto</string>
                <string>register</string>
                <string>short</string>
                <string>volatile</string>
                <!-- nesC -->
                <string>abstract</string>
                <string>as</string>.
                <string>async</string>.
                <string>atomic</string>
                <string>call</string>
                <string>command</string>
                <string>components</string>
                <string>configuration</string>
                <string>event</string>
                <string>implementation</string>
                <string>includes</string>
                <string>interface</string>
                <string>module</string>
                <string>norace</string>
                <string>post</string>
                <string>provides</string>
                <string>signal</string>
                <string>task</string>
                <string>uses</string>
                <string>result_t</string>
                <string>SUCCESS</string>
                <string>FAIL</string>
                <string>TRUE</string>
                <string>FALSE</string>
               
            </keywords>
            <keywords id="Numbers" color="#00f" useforautocomplete="no">
				<regex>(?&lt;=[^\w\d]|^)(((([0-9]+\.[0-9]*)|(\.[0-9]+))([eE][+\-]?[0-9]+)?[fFlL]?)|((([1-9][0-9]*)|0[0-7]*|(0[xX][0-9a-fA-F]+))(([uU][lL]?)|([lL][uU]?))?))(?=[^\w\d]|$)</regex>
            </keywords>
            <keywords id="FunctionRegex" color="#003369" useforautocomplete="no">
				<regex>([A-Za-z0-9_]+ *)\(</regex>
            </keywords>

        </default>

        <state id="Characters" color="#00f" background-color="none" font-weight="normal" font-style="normal">
            <begin><regex>'</regex></begin>
            <end><regex>(\\'')|(.')</regex></end>
        </state>

        <state id="Preprocessor" color="#683821" background-color="none">
            <begin><regex>#</regex></begin>
            <end><regex>((?&lt;=[^\\])[\n\r])|(^[\n\r])</regex></end>
            <keywords id="Numbers" color="#00f" useforautocomplete="no">
				<regex>(?&lt;=[^\w\d]|^)(((([0-9]+\.[0-9]*)|(\.[0-9]+))([eE][+\-]?[0-9]+)?[fFlL]?)|((([1-9][0-9]*)|0[0-7]*|(0[xX][0-9a-fA-F]+))(([uU][lL]?)|([lL][uU]?))?))(?=[^\w\d]|$)</regex>
            </keywords>
        </state>
        
        <state id="AutodocComment" color="#236E25" background-color="none" font-weight="bold" font-style="italic">
            <begin><regex>/\*"</regex></begin>
            <end><regex>"\*/</regex></end>
        </state>

        <state id="Comment" color="#236E25" background-color="none" font-weight="normal" font-style="italic">
            <begin><regex>/\*</regex></begin>
            <end><regex>\*/</regex></end>
        </state>
        
        <state id="SingleComment" color="#236E25" background-color="none" font-weight="normal" font-style="italic">
            <begin><regex>//</regex></begin>
            <end><regex>[\n\r]</regex></end>
        </state>
        
        <state id="String" color="#760f15" background-color="none" font-weight="normal" font-style="normal">
            <begin><regex>"</regex></begin>
            <end><regex>(((?&lt;!\\)(\\\\)*)|^)"</regex></end>
        </state>
    </states>

</syntax>
